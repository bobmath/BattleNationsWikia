#!/usr/bin/env perl
# Check prev and next links between units for consistency.
use strict;
use warnings;

my (%prev, %next);
foreach my $file (glob "wiki/*") {
   (my $base = $file) =~ s{.*/}{};
   open my $F, '<', $file or next;
   for (1..10) {
      defined(my $line = <$F>) or last;
      if ($line =~ /^\s*\|\s*(.*?)\s*=\s*(.*?)\s*$/) {
         my $key = $1;
         my $val = $2;
         if ($key eq 'prev') {
            $prev{$base} = scrub($val);
         }
         elsif ($key eq 'next') {
            $next{$base} = scrub($val);
            $prev{$base} //= '';
         }
      }
   }
}

foreach my $key (sort keys %prev) {
   if (my $prev = $prev{$key}) {
      print "$key prev\n" unless ($next{$prev}//'') eq $key;
   }
   if (my $next = $next{$key}) {
      print "$key next\n" unless ($prev{$next}//'') eq $key;
   }
}

sub scrub {
   my ($file) = @_;
   $file =~ s/[^\w\s\-.]//g;
   $file =~ s/\s+/_/g;
   return $file
}

