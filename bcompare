#!/usr/bin/env perl
# Compare generated wikitext for buildings to what's on the wiki.
# Download pages with slurp script first.
# This uses a very simplistic wikitext parser because I don't feel like
# writing a real one. It mostly works for most of the current pages on
# the wiki.
use strict;
use warnings;

opendir my $DIR, 'data/buildings' or die;
my @files = sort grep { !/^\./ } readdir $DIR;
closedir $DIR;

my $picky = 1;

my %ignore;
$ignore{$_} = 1 for qw(
   image
   targetbox-rows
   weaponicon
);

foreach my $file (@files) {
   my $file1 = "data/buildings/$file";
   my $file2 = "wiki/$file";
   my $stat1 = read_stat($file1) or next;
   my $stat2 = read_stat($file2) or next;
   print "\n", $file, "\n";
   $stat1->{$_} ||= {} foreach keys %$stat2;
   for my $name (sort keys %$stat1) {
      print $name, "\n";
      my $sec1 = $stat1->{$name};
      my $sec2 = $stat2->{$name} || {};
      $sec1->{$_} //= '' foreach keys  %$sec2;
      for my $key (sort keys %$sec1) {
         my $val1 = $sec1->{$key};
         my $val2 = $sec2->{$key} // '';
         if (lc($val1) ne lc($val2)) {
            if (length($val1) >= 20 || length($val2) >= 20) {
               print "   $key <<$val1>>\n   $key <<$val2>>\n";
            }
            else {
               print "   $key <<$val1>> <<$val2>>\n";
            }
         }
      }
   }
}

sub read_stat {
   my ($file) = @_;
   open my $F, '<', $file or return;
   my (%stat, $sec);
   local $_;
   while (<$F>) {
      if (/^\s*\|\s*(.*?)\s*=\s*(.*)/) {
         my $key = lc($1);
         my $val = $2;
         next if $key =~ /image$/ || $ignore{$key};
         $sec->{$key} = $val;
      }
      elsif (/^\}*\{\{(\w+)/) {
         my $key = $1;
         next if lc($key) eq 'clear';
         my $k = $key;
         my $n = 1;
         while ($stat{$k}) {
            $k = $key . '-' . ++$n;
         }
         $sec = $stat{$k} = {};
      }
      elsif (/^\s*$/) {
      }
      else {
         $sec = undef;
      }
   }
   return unless %stat;
   return \%stat;
}

